{"version":3,"sources":["calculatorContext.js","Buttons.js","Display.js","App.js","index.js"],"names":["CalculatorContext","createContext","CalculatorProvider","props","useState","display","equation","lastClicked","operators","state","setState","Provider","value","children","Buttons","useContext","handleNum","e","target","clearDisplay","clearEquation","prevState","indexOf","length","persist","handleOperator","substring","handleEval","trimmedEquation","testRegex","endsWith","test","eval","onClear","className","id","onClick","Display","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e17122e.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const CalculatorContext = createContext([{}, () => {}]);\r\n\r\nexport const CalculatorProvider = props => {\r\n  const [state, setState] = useState({\r\n    display: '0',\r\n    equation: '0',\r\n    lastClicked: '',\r\n    operators: 0\r\n  });\r\n\r\n  return (\r\n    <CalculatorContext.Provider value={[state, setState]}>\r\n      {props.children}\r\n    </CalculatorContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { CalculatorContext } from './calculatorContext';\r\n\r\nconst Buttons = () => {\r\n  const [state, setState] = useContext(CalculatorContext);\r\n\r\n  const handleNum = e => {\r\n    // Clear display and equation if starting from initial value or after evaluated\r\n    // Dont allow zeroes at beginning of equation\r\n    if (\r\n      (state.display === '0' &&\r\n        e.target.value !== '0' &&\r\n        e.target.value !== '.') ||\r\n      state.lastClicked === '='\r\n    ) {\r\n      clearDisplay();\r\n      clearEquation();\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        display: e.target.value,\r\n        equation: e.target.value,\r\n        lastClicked: e.target.value\r\n      }));\r\n    }\r\n    // If decimal point is entered and there is not already a decimal point in the number\r\n    // Append the decimal to the number on the display and equation\r\n    else if (e.target.value === '.' && state.display.indexOf('.') === -1) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        display: prevState.display + e.target.value,\r\n        equation: prevState.equation + e.target.value,\r\n        lastClicked: e.target.value\r\n      }));\r\n    }\r\n    // Don't allow zeroes at beginning of number after an operator\r\n    else if (\r\n      (state.lastClicked === '+' ||\r\n        state.lastClicked === '*' ||\r\n        state.lastClicked === '/' ||\r\n        state.lastClicked === '-') &&\r\n      e.target.value === '0'\r\n    ) {\r\n      setState(prevState => ({\r\n        ...prevState\r\n      }));\r\n    }\r\n    // If calculator is not in initial value and value is not a decimal\r\n    // When number is entered append the number to the rest of the equation and display\r\n    // MAX numbers allowed on display is 21\r\n    else if (\r\n      e.target.value !== '.' &&\r\n      state.display !== '0' &&\r\n      state.display.length < 21\r\n    ) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        display: prevState.display + e.target.value,\r\n        equation: prevState.equation + e.target.value,\r\n        lastClicked: e.target.value\r\n      }));\r\n    }\r\n    // Removes synthetic event from the pool and allow references to the event to be retained by user code\r\n    e.persist();\r\n  };\r\n\r\n  const handleOperator = e => {\r\n    // If operator is entered when Calculator is in it's initial value\r\n    if (state.display === '0' || state.equation === '0') {\r\n      clearDisplay();\r\n      clearEquation();\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        display: e.target.value,\r\n        equation: e.target.value,\r\n        lastClicked: e.target.value,\r\n        operators: 1\r\n      }));\r\n    }\r\n    // If an equation was just evaluated only clear the display so operators can be performed on\r\n    // previous equation's result\r\n    else if (state.lastClicked === '=') {\r\n      clearDisplay();\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        display: e.target.value,\r\n        equation:\r\n          prevState.equation.substring(\r\n            prevState.equation.indexOf('=') + 1,\r\n            prevState.equation.length\r\n          ) + e.target.value,\r\n        lastClicked: e.target.value,\r\n        operators: 1\r\n      }));\r\n      // If a subtraction/negative operator is entered and lastClicked is not a subtraction/negative operator\r\n      // Append the subtraction/negative operator to the first operator\r\n    } else if (\r\n      e.target.value === '-' &&\r\n      (state.lastClicked === '+' ||\r\n        state.lastClicked === '*' ||\r\n        state.lastClicked === '/')\r\n    ) {\r\n      clearDisplay();\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        equation: prevState.equation + e.target.value,\r\n        display: e.target.value,\r\n        lastClicked: e.target.value,\r\n        operators: 2\r\n      }));\r\n    }\r\n    // If 2 or more operators are entered consecutively, the operation performed should be the last operator entered\r\n    else if (\r\n      state.lastClicked === '-' &&\r\n      state.operators === 2 &&\r\n      e.target.value !== '-'\r\n    ) {\r\n      clearDisplay();\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        equation:\r\n          prevState.equation.substring(0, prevState.equation.length - 2) +\r\n          e.target.value,\r\n        display: e.target.value,\r\n        lastClicked: e.target.value\r\n      }));\r\n    }\r\n    // If an operator is entered after another operator (excluding negative sign)\r\n    // Remove last operator and append the current operator\r\n    else if (\r\n      (e.target.value === '+' ||\r\n        e.target.value === '*' ||\r\n        e.target.value === '/') &&\r\n      (state.lastClicked === '+' ||\r\n        state.lastClicked === '*' ||\r\n        state.lastClicked === '/' ||\r\n        state.lastClicked === '-')\r\n    ) {\r\n      clearDisplay();\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        equation:\r\n          prevState.equation.substring(0, prevState.equation.length - 1) +\r\n          e.target.value,\r\n        display: e.target.value,\r\n        lastClicked: e.target.value,\r\n        operators: 1\r\n      }));\r\n    }\r\n    // Append operator straight to the display/equation if lastClicked is not an operator\r\n    else if (\r\n      (e.target.value === '+' ||\r\n        e.target.value === '*' ||\r\n        e.target.value === '/' ||\r\n        e.target.value === '-') &&\r\n      (state.lastClicked !== '+' &&\r\n        state.lastClicked !== '*' &&\r\n        state.lastClicked !== '/' &&\r\n        state.lastClicked !== '-')\r\n    ) {\r\n      clearDisplay();\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        equation: prevState.equation + e.target.value,\r\n        display: e.target.value,\r\n        lastClicked: e.target.value,\r\n        operators: 1\r\n      }));\r\n    }\r\n    // Removes synthetic event from the pool and allow references to the event to be retained by user code\r\n    e.persist();\r\n  };\r\n  const handleEval = e => {\r\n    // If equation ends with an operator, remove it from the equation before evaluating\r\n    let trimmedEquation = '';\r\n    // testRegex is used to make sure equation operators are in order before evaluating\r\n    let testRegex = /^([-+.*/]{1,})+([\\d.]*[-+.*/]{1,})*([\\d.]*[-+.*/]{1,}[\\d.]*)*$/;\r\n    // If equation ends with 2 operators take them off before evaluating\r\n    if (\r\n      (state.equation.endsWith('+-') ||\r\n        state.equation.endsWith('*-') ||\r\n        state.equation.endsWith('/-')) &&\r\n      state.lastClicked !== '=' &&\r\n      testRegex.test(state.equation) === false\r\n    ) {\r\n      trimmedEquation = state.equation.substring(0, state.equation.length - 2);\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        equation: `${trimmedEquation} = ${eval(trimmedEquation)}`,\r\n        display: eval(trimmedEquation),\r\n        lastClicked: e.target.value\r\n      }));\r\n    }\r\n    // If equation ends with 1 operator take it off before evaluating\r\n    else if (\r\n      (state.equation.endsWith('+') ||\r\n        state.equation.endsWith('-') ||\r\n        state.equation.endsWith('*') ||\r\n        state.equation.endsWith('/')) &&\r\n      state.lastClicked !== '=' &&\r\n      testRegex.test(state.equation) === false\r\n    ) {\r\n      trimmedEquation = state.equation.substring(0, state.equation.length - 1);\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        equation: `${trimmedEquation} = ${eval(trimmedEquation)}`,\r\n        display: eval(trimmedEquation),\r\n        lastClicked: e.target.value\r\n      }));\r\n    }\r\n    // If equation is written properly and testRegex passes\r\n    else if (\r\n      state.lastClicked !== '=' &&\r\n      testRegex.test(state.equation) === false\r\n    ) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        equation: `${prevState.equation} = ${eval(prevState.equation)}`,\r\n        display: eval(prevState.equation),\r\n        lastClicked: e.target.value\r\n      }));\r\n    }\r\n    // Removes synthetic event from the pool and allow references to the event to be retained by user code\r\n    e.persist();\r\n  };\r\n\r\n  const clearDisplay = () => {\r\n    setState(prevState => ({ ...prevState, display: '0' }));\r\n  };\r\n  const clearEquation = () => {\r\n    setState(prevState => ({ ...prevState, equation: '0' }));\r\n  };\r\n  const onClear = () => {\r\n    clearDisplay();\r\n    clearEquation();\r\n  };\r\n  return (\r\n    <div className=\"buttons\">\r\n      <button id=\"clear\" value=\"AC\" onClick={onClear}>\r\n        AC\r\n      </button>\r\n      <button id=\"divide\" value=\"/\" onClick={handleOperator}>\r\n        /\r\n      </button>\r\n      <button id=\"multiply\" value=\"*\" onClick={handleOperator}>\r\n        *\r\n      </button>\r\n      <button id=\"seven\" value=\"7\" onClick={handleNum}>\r\n        7\r\n      </button>\r\n      <button id=\"eight\" value=\"8\" onClick={handleNum}>\r\n        8\r\n      </button>\r\n      <button id=\"nine\" value=\"9\" onClick={handleNum}>\r\n        9\r\n      </button>\r\n      <button id=\"subtract\" value=\"-\" onClick={handleOperator}>\r\n        -\r\n      </button>\r\n      <button id=\"four\" value=\"4\" onClick={handleNum}>\r\n        4\r\n      </button>\r\n      <button id=\"five\" value=\"5\" onClick={handleNum}>\r\n        5\r\n      </button>\r\n      <button id=\"six\" value=\"6\" onClick={handleNum}>\r\n        6\r\n      </button>\r\n      <button id=\"add\" value=\"+\" onClick={handleOperator}>\r\n        +\r\n      </button>\r\n      <button id=\"one\" value=\"1\" onClick={handleNum}>\r\n        1\r\n      </button>\r\n      <button id=\"two\" value=\"2\" onClick={handleNum}>\r\n        2\r\n      </button>\r\n      <button id=\"three\" value=\"3\" onClick={handleNum}>\r\n        3\r\n      </button>\r\n      <button id=\"zero\" value=\"0\" onClick={handleNum}>\r\n        0\r\n      </button>\r\n      <button id=\"decimal\" value=\".\" onClick={handleNum}>\r\n        .\r\n      </button>\r\n      <button id=\"equals\" value=\"=\" onClick={handleEval}>\r\n        =\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { useContext } from 'react';\r\nimport { CalculatorContext } from './calculatorContext';\r\n\r\nconst Display = () => {\r\n  const [state] = useContext(CalculatorContext);\r\n  return (\r\n    <div id=\"current\">\r\n      <div id=\"equation\">{state.equation}</div>\r\n      <div id=\"display\">{state.display}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Display;\r\n","import React from 'react';\nimport Display from './Display';\nimport Buttons from './Buttons';\nimport { CalculatorProvider } from './calculatorContext';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <CalculatorProvider>\n      <div className=\"App\">\n        <div className=\"appContainer\">\n          <div className=\"calcContainer\">\n            <Display />\n            <Buttons />\n          </div>\n          <div className=\"author\">\n            Designed and Coded by\n            <br />\n            <span>Ian Benton</span>\n          </div>\n        </div>\n      </div>\n    </CalculatorProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}